@inject IUserSession Session
@code {
    [Parameter] public string Model { get; set; }
    [Parameter] public TextModel Parsed { get; set; }

    protected override void OnParametersSet()
    {
        if (Parsed == null)
        {
            Parsed = TextModel.Parse(Model);
        }
    }
}

@switch (Parsed)
{
    case TextModel.Spans spans:
        @foreach (var span in spans.Children)
        {
            <RichText Parsed="@span" />
        }
        break;

    case TextModel.Lines lines:
        @foreach (var line in lines.Children)
        {
            <RichText Parsed="@line" /><br />
        }
        break;

    case TextModel.Paras paras:
        <div class="rich-text__paras">
            @foreach (var para in paras.Children)
            {
                <p>
                    <RichText Parsed="@para" />
                </p>
            }
        </div>
        break;
            
    case TextModel.Block block:
        <div class="rich-text__block">
            <RichText Parsed="@block.Child" />
        </div>
        break;

    case TextModel.Run run:
        <text>@run.Text</text>
        break;

    case TextModel.Error error:
        <span class="rich-text__error">@error.Text</span>
        break;

    case TextModel.Indent indent:
        @for (var i = 0; i < indent.Level; i++)
        {
            <text>...</text>
        }
        break;

    case TextModel.Symbol symbol:
        @symbol.Prefix<img class="rich-text__symbol" src="symbols/@(symbol.Name).png" width="8" height="8">@symbol.Suffix
        break;

    case TextModel.Card card:
        var model = Cards.All.ByName(card.Name);
        var subType = (model as Cards.ActionCardModel)?.SubType;
        var colorType = Cards.All.GetColor(model.Type, subType);
        <WithTooltip>
            <Content>
                @card.Prefix<span style="background: var(--card-type-@(colorType))">@Strings.TitleCase(card.Name)</span>@card.Suffix
            </Content>
            <Tooltip>
                <Magnify>
                    <CardView Name="@card.Name" Type="@model.Type" SubType="@subType" Art="@model.Art" Text="@model.Text" Half="false" />
                </Magnify>
            </Tooltip>
        </WithTooltip>   
        break;

    case TextModel.Player player:
        if (Session.Username.Equals(player.Name))
        {
            <text>@(player.Prefix)You@(player.Suffix)</text>
        }
        else
        {
            <PlayerLink Name="@player.Name" Prefix="@player.Prefix" Suffix="@player.Suffix" />
        }
        break;

    case TextModel.Pronominal pro:
        if (Session.Username.Equals(pro.Name))
        {
            <text>@pro.IfYou</text>
        }
        else
        {
            <text>@pro.IfThem</text>
        }
        break;

    default:
        <text>@Parsed</text>
        break;
}
