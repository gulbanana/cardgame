@inject IUserSession Session
@code {
    [CascadingParameter(Name = "Current")] public GameModel Model { get; set; }
    [Parameter] public string Id { get; set; }
    [Parameter] public string Owner { get; set; }
    private IMat mat;
    private string contents;

    protected override void OnParametersSet()
    {
        mat = All.Mats.ByName(Id);

        if (Model.IsStarted)
        {
            if (Owner == null)
            {
                var cards = Model.MatCards[Id];
                contents = mat.GetContents(cards, false);
            }
            else
            {
                var cards = Model.PlayerMatCards[Owner][Id];
                contents = mat.GetContents(cards, Session.Username == Owner || !Model.Players.Contains(Session.Username));
            }
        }
    }
}

<div class="mat-view">
    <img class="mat-view__picture" src="/mats/@(mat.Art).jpg">
    <div class="mat-view__overlay">
        @if (contents != null)
        {
            <div class="mat-view__contents">
                <RichText @key="contents" Model="@contents" />
            </div>
        }
    </div>
    @if (mat.Label != null)
    {
        <h3 class="mat-view__title mat-view__label">@mat.Label</h3>
    }
    @if (Owner != null)
    {
        <h3 class="mat-view__title mat-view__owner"><PlayerLink Name="@Owner" /></h3>
    }
</div>