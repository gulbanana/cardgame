@code {
    [Parameter] public string Name { get; set; }
    [Parameter] public CardType Type { get; set; }
    [Parameter] public string SubType { get; set; }
    [Parameter] public string Art { get; set; } = "missing";
    [Parameter] public int Cost { get; set; }
    [Parameter] public string Text { get; set; }
    [Parameter] public bool Half { get; set; }
    [Parameter] public int Stack { get; set; }
    [Parameter] public string Color { get; set; }
    [Parameter] public CardSet? SetIcon { get; set; }
    
    protected override void OnParametersSet()
    {
        if (Color == null)
        {
            Color = All.Cards.GetColor(Type, SubType);
        }
    }
}

<Stacked Size="@Stack" Type="@Color" Half="@Half">
    <div class="card-view">
        <div class="card__header card-view__title">@Strings.TitleCase(Name)</div>
        @if (Half) {
            <div class="card__image card-view__picture">
                <img src="/cards/@(Art).jpg" />
            </div>
        } else if (Text == null) {
            <div class="card__image-2x card-view__picture">
                <img src="/cards/@(Art).jpg" />
            </div>
        } else {
            <div class="card__image card-view__picture">
                <img src="/cards/@(Art).jpg" />
            </div>
            <div class="card__text-separator" />
            <div class="card__text">
                <div>
                    <RichText @key="Text.GetHashCode()" Model="@Text" />
                </div>
            </div>
        }
        <div class="card__footer card-view__title">
            <img class="card__footer-cost" src="/symbols/coin@(Cost).png" />

            @if (SubType == null)
            {
                <span>@Type</span>
            }
            else
            {
                <span>@SubType</span>
            }

            @if (SetIcon != null)
            {
                <img class="card__footer-set" src="/symbols/set-@(SetIcon).png" />
            }
        </div>
    </div>
</Stacked>