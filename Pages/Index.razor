@page "/"
@attribute [Authorize]
@implements IDisposable
@inject NavigationManager Navigation
@inject IGameEndpoint Endpoint
@code {
    private GameSummary[] currentGames;
    private string newGameName;

    protected override void OnInitialized()
    {
        currentGames = Endpoint.Subscribe(OnUpdate);
    }

    private void OnUpdate(GameSummary[] newGames)
    {
        InvokeAsync(() =>
        {
            currentGames = newGames;
            StateHasChanged();
        });
    }

    void OnSubmit()
    {
        Navigation.NavigateTo($"/game/{newGameName}");
    }

    public void Dispose()
    {
        Endpoint.Unsubscribe(OnUpdate);
    }
}

<h3>New game</h3>
<form @onsubmit="OnSubmit">    
    <input type="text" @bind="newGameName">
    <ActiveButton Label="Create" />
</form>

<h3>Current games</h3>
@foreach (var game in currentGames)
{    
    <p>
        <a href="/game/@game.Name">@game.Name</a> - @(game.Status).<br>
        @for (var i = 0; i < game.Players.Length; i++)
        {
            
            if (i < game.Players.Length - 1)
            {
                <text><PlayerLink Name="@game.Players[i]" />, </text>
            }
            else
            {
                <text><PlayerLink Name="@game.Players[i]" /></text>
            }
        }
    </p>
}