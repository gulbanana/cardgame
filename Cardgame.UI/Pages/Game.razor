@page "/game/{GameName}"
@attribute [Authorize]
@inject NavigationManager Navigation
@inject ILobbyEndpoint Lobby
@inject IUserSession Session
@code {
    [Parameter] public string GameName { get; set; }
    private IGameEndpoint game;

    protected override void OnInitialized()
    {
        game = Lobby.FindGame(GameName);
    }

    private void OnDispatch(GameModel model, ClientCommand command)
    {
        command.Seq = model.Seq;
        var error = game.Execute(Session.Username, command);

        if (error != null)
        {
            Console.WriteLine(error);
            StateHasChanged();
        }
    }

    private static bool IsNewer(GameModel newer, GameModel older)
    {
        return newer.Seq >= older.Seq; // why not >? because we have odd shared-instance problems
    }
}

<Subscribed Endpoint="@game" IsNewer="@IsNewer">    
    <CascadingValue Name="Previous" Value="@context.Previous">
        <CascadingValue Name="Current" Value="@context.Current">
            <CascadingValue Value="@(new ClientDispatcher(c => OnDispatch(context.Current, c)))">
                <GameView Name="@GameName" />
            </CascadingValue>
        </CascadingValue>
    </CascadingValue>
</Subscribed>