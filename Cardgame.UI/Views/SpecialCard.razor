@code {
    [Parameter] public string Name { get; set; }
    [Parameter] public Size Size { get; set; }
    [Parameter] public int Stack { get; set; }
    [Parameter] public string Colour { get; set; } = "special";
    private int TrueCount => Name == "trash" ? Stack - 1 : Stack;
}

@if ((Size != Size.Full) || TrueCount > 1)
{
    <WithTooltip>
        <Content>
            <Stacked Count="@Stack" Colour="@Colour" Size="@Size">
                <div class="special-card active-border" style="background: var(--card-type-@Colour);">
                    <img class="special-card__@(Size.ToString().ToLower())" src="/_content/Cardgame.UI/cards/@(Name)-@(Size.ToString().ToLower()).jpg" />
                </div>
            </Stacked>
        </Content>
        <Tooltip>
            <Magnify>
                <StackHeader Count="@TrueCount">
                    <div class="special-card active-border" style="background: var(--card-type-@Colour);">
                        <img class="special-card__full" src="/_content/Cardgame.UI/cards/@(Name)-full.jpg" />
                    </div>
                </StackHeader>
            </Magnify>
        </Tooltip>
    </WithTooltip>
}
else
{
    <Stacked Count="@Stack" Colour="@Colour">
        <div class="special-card active-border" style="background: var(--card-type-@Colour);">
            <img class="special-card__full" src="/_content/Cardgame.UI/cards/@(Name)-full.jpg" />
        </div>
    </Stacked>
}