@inject IUserSession Session
@code {
    [Parameter] public GameModel Model { get; set; }
    [CascadingParameter] public Executor Dispatch { get; set; }
}

<div class="game-view">
    <div style="grid-area: event-log" class="game-view__events">
        <VerticalLog>
            <RichText Model="@(new TextModel.Paras { Children = Model.EventLog.ToArray() })"/>
        </VerticalLog>
    </div>

    <GridSeparator Area="left-bar"/>

    <div style="grid-area: board" class="game-view__board">
        <div style="grid-area: kingdom" class="game-view__kingdom">
            <Card Half="true" Id="Estate" />
            <Card Half="true" Id="Duchy" />
            <Card Half="true" Id="Province" />

            @if (Model.IsStarted)
            {
                <Card Half="true" Id="@Model.KingdomCards[0]" />
                <Card Half="true" Id="@Model.KingdomCards[1]" />
                <Card Half="true" Id="@Model.KingdomCards[2]" />
                <Card Half="true" Id="@Model.KingdomCards[3]" />
                <Card Half="true" Id="@Model.KingdomCards[4]" />
            }
            else
            {
                <SpecialCard Name="card-back" Half="true" />
                <SpecialCard Name="card-back" Half="true" />
                <SpecialCard Name="card-back" Half="true" />
                <SpecialCard Name="card-back" Half="true" />
                <SpecialCard Name="card-back" Half="true" />
            }

            <Card Half="true" Id="Copper" />
            <Card Half="true" Id="Silver" />
            <Card Half="true" Id="Gold" />

            @if (Model.IsStarted)
            {
                <Card Half="true" Id="@Model.KingdomCards[5]" />
                <Card Half="true" Id="@Model.KingdomCards[6]" />
                <Card Half="true" Id="@Model.KingdomCards[7]" />
                <Card Half="true" Id="@Model.KingdomCards[8]" />
                <Card Half="true" Id="@Model.KingdomCards[9]" />
            }
            else
            {
                <SpecialCard Name="card-back" Half="true" />
                <SpecialCard Name="card-back" Half="true" />
                <SpecialCard Name="card-back" Half="true" />
                <SpecialCard Name="card-back" Half="true" />
                <SpecialCard Name="card-back" Half="true" />
            }
        </div>

        <div style="grid-area: actions" class="game-view__actions">
            <Card Large="true" Id="Village" />
            <Card Large="true" Id="Market" />
        </div>

        <div style="grid-area: hand" class="game-view__hand">
            @if (Model.IsStarted)
            {
                <Card Id="Copper" />
                <Card Id="Copper" />
                <Card Id="Copper" />
                <Card Id="Estate" />
                <Card Id="Estate" />
            }
            else
            {
                <SpecialCard Name="card-back" />
                <SpecialCard Name="card-back" />
                <SpecialCard Name="card-back" />
                <SpecialCard Name="card-back" />
                <SpecialCard Name="card-back" />
            }
        </div>

        <div style="grid-area: discard">
            <SpecialCard Name="trash" />
        </div>

        <div style="grid-area: deck">
            <SpecialCard Name="card-back" />
        </div>
    </div>

    <GridSeparator Area="right-bar"/>

    <div style="grid-area: status" class="game-view__status">
        @if (Model.Players.Any())
        {
            <span>Current players: @string.Join(", ", Model.Players).</span>
        }
        else
        {
            <span>No players.</span>
        }

        @if (!Model.Players.Contains(Session.Username))
        {
            <button @onclick="@(() => Dispatch(new JoinGameCommand()))">Join game</button>
        }
        else
        {
            <button @onclick="@(() => Dispatch(new LeaveGameCommand()))">Leave game</button>
        }
    </div>

    <ChatView Model="@Model.ChatLog" />
</div>