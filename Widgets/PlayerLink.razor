@inject IUserSession Session
@inject IUserEndpoint UserEndpoint
@code {
    [CascadingParameter] GameModel Game { get; set; }
    [Parameter] public string Name { get; set; }
    [Parameter] public string Text { get; set; }
    [Parameter] public string Prefix { get; set; }
    [Parameter] public string Suffix { get; set; }

    protected override void OnParametersSet()
    {
        if (Text == null) 
        {
            Text = Name;
        }
    }
}

@if (Game != null && Game.Players.Contains(Name))
{
    var score = All.Score.Calculate(Game, Name).Total;
    var hand = !Game.IsStarted ? 5 : Game.Hands[Name].Count;
    var text = $@"<lines>
        <sym prefix='Current score: {score}'>vp</sym>
        <run>Hand size: {hand} cards</run>
    </lines>";
    <Subscribed Endpoint="@UserEndpoint">
        <WithTooltip>
            <Content>
                @Prefix<span class="player-link 
                @(Name.Equals(Session.Username) ? "player-link--you" : "")
                @(!context.Current.Contains(Name) ? "player-link--disconnected" : "")
                @(!Game.IsFinished && Game.ActivePlayer == Name ? "player-link--active" : "")
                ">@Text</span>@Suffix
            </Content>
            <Tooltip>
                <div class="player-link__tooltip">
                    <RichText @key="text" Model="@text" />
                </div>
            </Tooltip>
        </WithTooltip>
    </Subscribed>
}
else
{
    <Subscribed Endpoint="@UserEndpoint">
        @Prefix<span class="player-link 
        @(Name.Equals(Session.Username) ? "player-link--you" : "")
        @(!context.Current.Contains(Name) ? "player-link--disconnected" : "")
        ">@Text</span>@Suffix
    </Subscribed>
}