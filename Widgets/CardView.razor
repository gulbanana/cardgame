@code {
    [Parameter] public string Name { get; set; }
    [Parameter] public CardType Type { get; set; }
    [Parameter] public string SubType { get; set; }
    [Parameter] public string Art { get; set; } = "missing";
    [Parameter] public int Cost { get; set; }
    [Parameter] public TextModel Text { get; set; }
    [Parameter] public bool Half { get; set; }
    [Parameter] public bool Stack { get; set; }
    [Parameter] public string Color { get; set; }

    protected override void OnParametersSet()
    {
        if (Color == null)
        {
            Color = Cards.All.GetColor(Type, SubType);
        }
    }
}

<Stacked Size="@(Stack ? 3 : 0)" Type="@Color" Half="@Half">
    <div class="card-view">
        <div class="card__header card-view__title">@Name</div>
        @if (Half) {
            <div class="card__image card-view__picture">
                <img src="/cards/@(Art).jpg" />
            </div>
        } else if (Text == null) {
            <div class="card__image-2x card-view__picture">
                <img src="/cards/@(Art).jpg" />
            </div>
        } else {
            <div class="card__image card-view__picture">
                <img src="/cards/@(Art).jpg" />
            </div>
            <div class="card__text-separator" />
            <div class="card__text">
                <RichText Model="@Text" />
            </div>
        }
        <div class="card__footer card-view__title">
            <img class="card__footer-cost" src="/symbols/coin@(Cost).png" width="16" height="16" />

            @if (SubType == null)
            {
                <span>@Type</span>
            }
            else
            {
                <span>@Type - @SubType</span>
            }
        </div>
    </div>
</Stacked>