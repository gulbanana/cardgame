@inject IUserSession Session
@code {
    [Parameter] public TextModel Model { get; set; }
}

@switch (Model)
{
    case TextModel.Spans spans:
        @foreach (var span in spans.Children)
        {
            <RichText Model="@span" />
        }
        break;

    case TextModel.Lines lines:
        @foreach (var line in lines.Children)
        {
            <RichText Model="@line" /><br />
        }
        break;

    case TextModel.Paras paras:
        <div class="rich-text__paras">
            @foreach (var para in paras.Children)
            {
                <p>
                    <RichText Model="@para" />
                </p>                
            }
        </div>
        break;

    case TextModel.Run run:
        <text>@run.Text</text>
        break;

    case TextModel.Symbol symbol:
        <img class="rich-text__symbol" src="symbols/@(symbol.Name).png" width="8" height="8">
        break;

    case TextModel.Card card:
        var model = Cards.All.ByName[card.Name];
        var subType = (model as Cards.ActionCardModel)?.SubType;
        var colorType = Cards.All.GetColor(model.Type, subType);
        <WithTooltip>
            <Content>
                <span style="background: var(--card-type-@(colorType))">@card.Name</span>
            </Content>
            <Tooltip>
                <Magnify>
                    <CardView Name="@card.Name" Type="@model.Type" SubType="@subType" Art="@model.Art" Text="@model.Text" Half="false" />
                </Magnify>
            </Tooltip>
        </WithTooltip>   
        break;

    case TextModel.Player player:
        if (Session.Username.Equals(player.Name))
        {
            <text>You</text>
        }
        else
        {
            <text>@player.Name</text>
        }
        break;
    
    case TextModel.Block block:
        <div class="rich-text__block">
            <RichText Model="@block.Child" />
        </div>
        break;

    default:
        <text>@Model</text>
        break;
}
